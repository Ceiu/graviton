quarkus.datasource.db-kind = postgresql
quarkus.datasource.db-version = 14.0
quarkus.datasource.username = graviton
quarkus.datasource.password = graviton
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/graviton

quarkus.hibernate-orm.validate-in-dev-mode = false

# Probably move this more inward? Feels like we could end up failing here
quarkus.security.security-providers=BC

quarkus.rest-client.keep-alive-enabled=false
quarkus.vertx.eventbus.tcp-keep-alive=false
quarkus.http.http2=false

quarkus.http.host = 0.0.0.0
quarkus.http.ssl.certificate.files = graviton-ca.crt
quarkus.http.ssl.certificate.key-files = graviton-ca.key
quarkus.http.ssl-port = 8443
quarkus.http.insecure-requests = enabled
quarkus.http.limits.max-body-size = 1024M

# quarkus.rest-client.logging.scope=request-response
# quarkus.rest-client.logging.body-limit=1024

quarkus.log.file.enable=true
quarkus.log.file.path=logs/quarkus.log
# quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=INFO
# quarkus.log.category."io.quarkus.http.access-log".level=INFO

quarkus.rest-client.logging.scope=all
quarkus.http.access-log.enabled=false
quarkus.http.access-log.pattern=%h %l %u %t %{ALL_REQUEST_HEADERS} "%r" %s %b %m %D

# Defaults
graviton.datasource.fs.subscriptions = config/subscription_data/subscriptions
graviton.datasource.fs.products = config/subscription_data/product_data
graviton.datasource.fs.raw = config/subscription_data/raw

graviton.certs.ca = config/graviton-ca.crt
graviton.certs.private-key = config/graviton-ca.key
graviton.certs.signature-algorithm = SHA256WithRSA
